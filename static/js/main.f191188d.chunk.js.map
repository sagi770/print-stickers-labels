{"version":3,"sources":["components/FormArea/FormControlElement.tsx","components/FormArea/FormArea.tsx","components/PrintCube/Header.tsx","components/PrintCube/ProductImage.tsx","components/PrintCube/ContentArea.tsx","components/PrintCube/LogoArea.tsx","components/PrintCube/ButtonsArea.tsx","components/PrintCube/PrintCube.tsx","components/StickersArea.tsx","components/ShowButton.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","float","FormControl","display","FormControlElement","name","label","value","type","setFormState","formState","classes","inputType","className","TextField","onChange","event","target","variant","width","FormControlSelect","button","margin","spacing","FormArea","setStickersList","stickersList","setFormViewStatus","todayDate","emptyStickers","orderID","date","quantity","material","chainLength","line1","line2","image","gift","fast","handleCheckboxChange","checked","Grid","container","InputLabel","id","Select","labelId","MenuItem","FormControlLabel","control","Checkbox","color","Button","onClick","flex","Header","moment","format","img","height","ProductImage","imageURL","style","backgroundImage","checkbox","padding","silver","rose_gold","gold_plated","gold","white_gold","ContentArea","sticker","logoWrapper","position","left","bottom","LogoArea","src","process","alt","buttonsWarper","ButtonsArea","itemKey","removeSticker","newList","filter","item","index","HighlightOff","Edit","wrapper","textWrapper","PrintCube","formViewStatus","StickersArea","elementWidth","listItems","map","i","key","reverse","ShowButton","App","useState","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","getTodayDate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f191188d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\n\r\ninterface Props {\r\n    name: string;\r\n    label: string;\r\n    value: string;\r\n    type?: string;\r\n    formState: Stickers;\r\n    setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"width\": \"250px\",\r\n        float: \"left\",\r\n    },\r\n    FormControl: {\r\n        \"margin-bottom\": \"15px\",\r\n        display: \"block\",\r\n    },\r\n}));\r\n\r\n\r\nexport const FormControlElement = ({ name, label, value, type, setFormState, formState }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const inputType = (type === \"date\" ? \"date\" : \"text\");\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.FormControl}>\r\n            <TextField\r\n                type={inputType}\r\n                onChange={handleChange}\r\n                label={label}\r\n                name={name}\r\n                variant=\"outlined\"\r\n                value={value}\r\n            />\r\n        </FormControl>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\nimport { FormControlElement } from \"./FormControlElement\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"280px\",\r\n    float: \"left\",\r\n  },\r\n  FormControl: {\r\n    \"margin-bottom\": \"15px\",\r\n    \"max-width\": \"300px\",\r\n    display: \"block\",\r\n  },\r\n  FormControlSelect: {\r\n    \"margin-bottom\": \"15px\",\r\n    width: \"200px\",\r\n  },\r\n  button: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  setStickersList: React.Dispatch<React.SetStateAction<Stickers[]>>;\r\n  stickersList: Stickers[];\r\n  setFormViewStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n  formState: Stickers;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n  todayDate: string;\r\n}\r\n\r\nexport function FormArea({ setStickersList, stickersList, formState, setFormState, setFormViewStatus, todayDate }: Props) {\r\n  const classes = useStyles();\r\n\r\n  const hideForm = () => {\r\n    setFormViewStatus(false);\r\n  };\r\n\r\n  const emptyStickers = () => {\r\n    setFormState({\r\n      orderID: \"\",\r\n      date: todayDate,\r\n      quantity: \"\",\r\n      material: \"\",\r\n      chainLength: \"\",\r\n      line1: \"\",\r\n      line2: \"\",\r\n      image: \"\",\r\n      gift: false,\r\n      fast: false,\r\n    } as Stickers);\r\n  };\r\n\r\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormState({ ...formState, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const materialHandleChange = (event: React.ChangeEvent<{ name?: string | undefined; value: any; }>) => {\r\n    setFormState({\r\n      ...formState,\r\n      material: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setStickersList((stickersList) => [...stickersList, formState]);\r\n    emptyStickers();\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <h2>Please Write Sticker info:</h2>\r\n      <FormControlElement name=\"date\" label=\"date\" type=\"date\" value={formState.date} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"orderID\" label=\"orderID\" value={formState.orderID} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"quantity\" label=\"Quantity\" value={formState.quantity} formState={formState} setFormState={setFormState} />\r\n\r\n\r\n      <FormControl className={classes.FormControlSelect}>\r\n        <InputLabel id=\"demo-simple-select-label\">Choose material</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          name=\"material\"\r\n          value={formState.material}\r\n          onChange={materialHandleChange}\r\n        >\r\n          <MenuItem value=\"\">None</MenuItem>\r\n          <MenuItem value=\"silver\">Silver</MenuItem>\r\n          <MenuItem value=\"rose_gold\">Rose Gold</MenuItem>\r\n          <MenuItem value=\"gold_plated\">Gold Plated</MenuItem>\r\n          <MenuItem value=\"gold\">14k Yellow Gold</MenuItem>\r\n          <MenuItem value=\"white_gold\">14k White Gold</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControlElement name=\"chainLength\" label=\"Chain Length\" value={formState.chainLength} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"line1\" label=\"line 1\" value={formState.line1} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"line2\" label=\"line 2\" value={formState.line2} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"image\" label=\"Image\" value={formState.image} formState={formState} setFormState={setFormState} />\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={formState.gift}\r\n            onChange={handleCheckboxChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Gift\"\r\n        name=\"gift\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={formState.fast}\r\n            onChange={handleCheckboxChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"It's Fast\"\r\n        name=\"fast\"\r\n      />\r\n      <div className={classes.button}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          Add\r\n          </Button>\r\n        <Button variant=\"contained\" onClick={hideForm}>\r\n          Print\r\n          </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={emptyStickers}>\r\n          Empty\r\n          </Button>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    flex: {\r\n        display: \"flex\",\r\n        \"justify-content\": \"space-around\",\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    date: string;\r\n    quantity: string;\r\n    orderID: string;\r\n}\r\n\r\nexport const Header = ({ date, quantity, orderID }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.flex}>\r\n            <div className=\"display-inline\">{moment(date).format('DD/MM')}</div>\r\n            <div className=\"display-inline\">{(quantity !== \"\" ? `X${quantity}` : null)}</div>\r\n            <div className=\"display-inline\">{(orderID !== \"\" ? `#${orderID}` : null)}</div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    img: {\r\n        \"background-position\": \"center\",\r\n        \"background-repeat\": \"no-repeat\",\r\n        height: \"140px\",\r\n        \"background-size\": \"contain\",\r\n      },\r\n}));\r\n\r\n\r\ninterface Props {\r\n    imageURL: string;\r\n}\r\n\r\n\r\nexport const ProductImage = ({ imageURL }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n          <div\r\n            className={classes.img}\r\n            style={{ backgroundImage: `url('${imageURL}')` }}\r\n          ></div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers, MaterialObject } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    checkbox: {\r\n        padding: \"0 4px\",\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    sticker: Stickers;\r\n}\r\n\r\nconst material: MaterialObject = {\r\n    silver: \"Silver\",\r\n    rose_gold: \"Rose Gold\",\r\n    gold_plated: \"24k Gold Plated\",\r\n    gold: \"14k Yellow\",\r\n    white_gold: \"14k White Gold\",\r\n};\r\n\r\nexport const ContentArea = ({ sticker }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"height-20\">\r\n                {sticker.gift ? (\r\n                    <div className={`${classes.checkbox} float-left silver`}>\r\n                        אריזת מתנה\r\n                    </div>\r\n                ) : null}\r\n                {sticker.fast ? (\r\n                    <div className=\"float-right silver\">שליח עד הבית</div>\r\n                ) : null}\r\n            </div>\r\n            <div>{sticker.chainLength}</div>\r\n            <div className={`material-class-${sticker.material}`}>\r\n                {material[sticker.material]}\r\n            </div>\r\n            <div>{sticker.line1}</div>\r\n            <div>{sticker.line2}</div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  logoWrapper: {\r\n    position: \"absolute\",\r\n    left: \"20%\",\r\n    bottom: \"0px\",\r\n  },\r\n}));\r\n\r\nexport const LogoArea = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.logoWrapper}>\r\n      <img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"logo\" />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { HighlightOff, Edit } from \"@material-ui/icons\";\r\nimport { Stickers } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonsWarper: {\r\n        position: \"absolute\",\r\n        bottom: \"-19px\",\r\n        width: \"90px\",\r\n        left: \"45px\",\r\n        height: \"20px\",\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    sticker: Stickers;\r\n    itemKey: number;\r\n    stickersList: Stickers[];\r\n    setStickersList: (stickersList: Stickers[]) => void;\r\n    setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nexport const ButtonsArea = ({ sticker, stickersList, setStickersList, setFormState, itemKey }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const removeSticker = () => {\r\n        const newList = stickersList.filter((item, index) => index !== itemKey);\r\n        setStickersList(newList);\r\n    }\r\n\r\n    const editSticker = () => {\r\n        setFormState(sticker);\r\n        removeSticker();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.buttonsWarper}>\r\n            <HighlightOff onClick={removeSticker} className=\"float-left pointer\" />\r\n            <Edit onClick={editSticker} className=\"float-right pointer\" />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\nimport { Header } from \"./Header\";\r\nimport { ProductImage } from \"./ProductImage\";\r\nimport { ContentArea } from \"./ContentArea\";\r\nimport { LogoArea } from \"./LogoArea\";\r\nimport { ButtonsArea } from \"./ButtonsArea\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"7cm\",\r\n    width: \"4.58cm\",\r\n    float: \"left\",\r\n    \"max-width\": \"4.58cm\",\r\n    \"max-height\": \"7cm\",\r\n    \"font-size\": \"13px\",\r\n\r\n    // border: \"1px solid\",\r\n  },\r\n  wrapper: {\r\n    padding: \"5px\",\r\n    position: \"relative\",\r\n  },\r\n  textWrapper: {\r\n    height: \"90px\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    \"justify-content\": \"space-around\",\r\n  },\r\n}));\r\n\r\n\r\ninterface Props {\r\n  sticker: Stickers;\r\n  formViewStatus: boolean;\r\n  itemKey: number;\r\n  stickersList: Stickers[];\r\n  setStickersList: (stickersList: Stickers[]) => void;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\n\r\nexport const PrintCube = ({ sticker, itemKey, stickersList, setStickersList, setFormState, formViewStatus }: Props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.textWrapper}>\r\n          <Header date={sticker.date} quantity={sticker.quantity} orderID={sticker.orderID} />\r\n          <ContentArea sticker={sticker} />\r\n        </div>\r\n\r\n        <ProductImage imageURL={sticker.image} />\r\n        <LogoArea />\r\n        {(formViewStatus ?\r\n          <ButtonsArea\r\n            sticker={sticker}\r\n            itemKey={itemKey}\r\n            setFormState={setFormState}\r\n            stickersList={stickersList}\r\n            setStickersList={setStickersList} />\r\n          : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PrintCube } from \"./PrintCube/PrintCube\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../interfaces\";\r\n\r\n\r\n\r\nexport interface StickersAreaProps {\r\n  stickersList: Stickers[];\r\n  formViewStatus: boolean;\r\n  setStickersList: (stickersList: Stickers[]) => void;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nexport const StickersArea: React.FC<StickersAreaProps> = ({ stickersList, formViewStatus, setStickersList, setFormState }: StickersAreaProps) => {\r\n  const elementWidth = formViewStatus ? \"1305px\" : \"1060px\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: \"0 0 0 38px\",\r\n      padding: \"0px\",\r\n      width: elementWidth,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const listItems = stickersList.map((sticker, i) => (\r\n    <PrintCube\r\n      stickersList={stickersList}\r\n      setStickersList={setStickersList}\r\n      setFormState={setFormState}\r\n      itemKey={i}\r\n      key={i}\r\n      sticker={sticker}\r\n      formViewStatus={formViewStatus} />\r\n  )).reverse();\r\n\r\n  return <div className={classes.root}>{listItems}</div>;\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  setFormViewStatus: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nfunction ShowButton({ setFormViewStatus }:Props) {\r\n  const classes = useStyles();\r\n\r\n  const showForm = () => {\r\n    setFormViewStatus(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <VisibilityIcon className=\"pointer\" onClick={showForm} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowButton;\r\n","import React, { useState } from \"react\";\r\nimport { FormArea } from \"./components/FormArea/FormArea\";\r\nimport { StickersArea } from \"./components/StickersArea\";\r\nimport ShowButton from \"./components/ShowButton\";\r\nimport { Stickers } from \"./interfaces\";\r\n\r\nconst getTodayDate = () => {\r\n  const today = new Date();\r\n\r\n  const dd = String(today.getDate()).padStart(2, \"0\");\r\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n  const yyyy = today.getFullYear();\r\n  \r\n  return yyyy + \"-\" + mm + \"-\" + dd;\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [stickersList, setStickersList] = useState<Stickers[]>([]);\r\n  const [formViewStatus, setFormViewStatus] = useState<boolean>(true);\r\n  const todayDate = getTodayDate();\r\n\r\n  const [formState, setFormState] = useState<Stickers>({\r\n    orderID: \"\",\r\n    date: todayDate,\r\n    quantity: \"\",\r\n    material: \"\",\r\n    chainLength: \"\",\r\n    line1: \"\",\r\n    line2: \"\",\r\n    image: \"\",\r\n    gift: false,\r\n    fast: false,\r\n  });\r\n\r\n  //USE MOBX !!!\r\n  //USE CSS file\r\n\r\n  // const setStickers = (stickersList: Stickers[]) => {\r\n  //   setStickersList(stickersList);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {formViewStatus ? (\r\n        <FormArea\r\n          setStickersList={setStickersList}\r\n          stickersList={stickersList}\r\n          formState={formState}\r\n          setFormState={setFormState}\r\n          setFormViewStatus={setFormViewStatus}\r\n          todayDate={todayDate}\r\n        />\r\n      ) : (\r\n          <ShowButton setFormViewStatus={setFormViewStatus} />\r\n        )}\r\n\r\n      <StickersArea\r\n        formViewStatus={formViewStatus}\r\n        setStickersList={setStickersList}\r\n        stickersList={stickersList}\r\n        setFormState={setFormState}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}