{"version":3,"sources":["components/FormArea/FormControlElement.tsx","components/FormArea/FormArea.tsx","components/PrintCube/Header.tsx","components/PrintCube/ProductImage.tsx","components/PrintCube/ContentArea.tsx","components/PrintCube/LogoArea.tsx","components/PrintCube/ButtonsArea.tsx","components/PrintCube/PrintCube.tsx","components/StickersArea.tsx","components/ShowButton.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","float","FormControl","display","FormControlElement","name","label","value","type","setFormState","formState","classes","inputType","className","TextField","onChange","event","target","variant","width","FormControlSelect","button","margin","spacing","FormArea","setStickersList","stickersList","setFormViewStatus","todayDate","handleCheckboxChange","checked","Grid","container","date","orderID","quantity","InputLabel","id","Select","labelId","material","MenuItem","chainLength","line1","line2","image","FormControlLabel","control","Checkbox","gift","color","fast","Button","onClick","flex","Header","img","height","ProductImage","imageURL","style","backgroundImage","checkbox","padding","silver","rose_gold","gold_plated","gold","white_gold","ContentArea","sticker","logoWrapper","position","left","bottom","LogoArea","src","alt","buttonsWarper","ButtonsArea","itemKey","removeSticker","newList","filter","item","index","HighlightOff","Edit","wrapper","textWrapper","PrintCube","formViewStatus","StickersArea","elementWidth","listItems","map","i","key","reverse","ShowButton","App","useState","today","Date","setDate","getDate","dd","String","padStart","mm","getMonth","getFullYear","getTodayDate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45584cdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\n\r\ninterface Props {\r\n    name: string;\r\n    label: string;\r\n    value: string;\r\n    type?: string;\r\n    formState: Stickers;\r\n    setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"width\": \"250px\",\r\n        float: \"left\",\r\n    },\r\n    FormControl: {\r\n        \"margin-bottom\": \"15px\",\r\n        display: \"block\",\r\n    },\r\n}));\r\n\r\n\r\nexport const FormControlElement = ({ name, label, value, type, setFormState, formState }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const inputType = (type === \"date\" ? \"date\" : \"text\");\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.FormControl}>\r\n            <TextField\r\n                type={inputType}\r\n                onChange={handleChange}\r\n                label={label}\r\n                name={name}\r\n                variant=\"outlined\"\r\n                value={value}\r\n            />\r\n        </FormControl>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\nimport { FormControlElement } from \"./FormControlElement\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"280px\",\r\n    float: \"left\",\r\n  },\r\n  FormControl: {\r\n    \"margin-bottom\": \"15px\",\r\n    \"max-width\": \"300px\",\r\n    display: \"block\",\r\n  },\r\n  FormControlSelect: {\r\n    \"margin-bottom\": \"15px\",\r\n    width: \"200px\",\r\n  },\r\n  button: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  setStickersList: React.Dispatch<React.SetStateAction<Stickers[]>>;\r\n  stickersList: Stickers[];\r\n  setFormViewStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n  formState: Stickers;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n  todayDate: string;\r\n}\r\n\r\nexport function FormArea({ setStickersList, stickersList, formState, setFormState, setFormViewStatus, todayDate }: Props) {\r\n  const classes = useStyles();\r\n\r\n  const hideForm = () => {\r\n    setFormViewStatus(false);\r\n  };\r\n\r\n  const emptyStickers = () => {\r\n    setFormState({\r\n      orderID: \"\",\r\n      date: todayDate,\r\n      quantity: \"\",\r\n      material: \"\",\r\n      chainLength: \"\",\r\n      line1: \"\",\r\n      line2: \"\",\r\n      image: \"\",\r\n      gift: false,\r\n      fast: false,\r\n    } as Stickers);\r\n  };\r\n\r\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormState({ ...formState, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const materialHandleChange = (event: React.ChangeEvent<{ name?: string | undefined; value: any; }>) => {\r\n    setFormState({\r\n      ...formState,\r\n      material: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setStickersList((stickersList) => [...stickersList, formState]);\r\n    // emptyStickers();//TODO:remove it!!\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <h2>Please Write Sticker info:</h2>\r\n      <FormControlElement name=\"date\" label=\"date\" type=\"date\" value={formState.date} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"orderID\" label=\"orderID\" value={formState.orderID} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"quantity\" label=\"Quantity\" value={formState.quantity} formState={formState} setFormState={setFormState} />\r\n\r\n\r\n      <FormControl className={classes.FormControlSelect}>\r\n        <InputLabel id=\"demo-simple-select-label\">Choose material</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          name=\"material\"\r\n          value={formState.material}\r\n          onChange={materialHandleChange}\r\n        >\r\n          <MenuItem value=\"silver\">Silver</MenuItem>\r\n          <MenuItem value=\"rose_gold\">Rose Gold</MenuItem>\r\n          <MenuItem value=\"gold_plated\">Gold Plated</MenuItem>\r\n          <MenuItem value=\"gold\">14k Yellow Gold</MenuItem>\r\n          <MenuItem value=\"white_gold\">14k White Gold</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControlElement name=\"chainLength\" label=\"Chain Length\" value={formState.chainLength} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"line1\" label=\"line 1\" value={formState.line1} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"line2\" label=\"line 2\" value={formState.line2} formState={formState} setFormState={setFormState} />\r\n      <FormControlElement name=\"image\" label=\"Image\" value={formState.image} formState={formState} setFormState={setFormState} />\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={formState.gift}\r\n            onChange={handleCheckboxChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Gift\"\r\n        name=\"gift\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={formState.fast}\r\n            onChange={handleCheckboxChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"It's Fast\"\r\n        name=\"fast\"\r\n      />\r\n      <div className={classes.button}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          Add\r\n          </Button>\r\n        <Button variant=\"contained\" onClick={hideForm}>\r\n          Print\r\n          </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={emptyStickers}>\r\n          Empty\r\n          </Button>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    flex: {\r\n        display: \"flex\",\r\n        \"justify-content\": \"space-around\",\r\n    },\r\n}));\r\n\r\n\r\ninterface Props {\r\n    date: string;\r\n    quantity: string;\r\n    orderID: string;\r\n}\r\n\r\n\r\nexport const Header = ({ date, quantity, orderID }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.flex}>\r\n            <div className=\"display-inline\">{date}</div>\r\n            <div className=\"display-inline\">{(quantity !== \"\" ? `X${quantity}` : null)}</div>\r\n            <div className=\"display-inline\">#{orderID}</div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    img: {\r\n        \"background-position\": \"center\",\r\n        \"background-repeat\": \"no-repeat\",\r\n        height: \"140px\",\r\n        \"background-size\": \"contain\",\r\n      },\r\n}));\r\n\r\n\r\ninterface Props {\r\n    imageURL: string;\r\n}\r\n\r\n\r\nexport const ProductImage = ({ imageURL }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n          <div\r\n            className={classes.img}\r\n            style={{ backgroundImage: `url('${imageURL}')` }}\r\n          ></div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers, MaterialObject } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    checkbox: {\r\n        padding: \"0 4px\",\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    sticker: Stickers;\r\n}\r\n\r\nconst material: MaterialObject = {\r\n    silver: \"Silver\",\r\n    rose_gold: \"Rose Gold\",\r\n    gold_plated: \"24k Gold Plated\",\r\n    gold: \"14k Yellow\",\r\n    white_gold: \"14k White Gold\",\r\n};\r\n\r\nexport const ContentArea = ({ sticker }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"height-20\">\r\n                {sticker.gift ? (\r\n                    <div className={`${classes.checkbox} float-left silver`}>\r\n                        אריזת מתנה\r\n                    </div>\r\n                ) : null}\r\n                {sticker.fast ? (\r\n                    <div className=\"float-right silver\">שליח עד הבית</div>\r\n                ) : null}\r\n            </div>\r\n            <div className={`material-class-${sticker.material}`}>\r\n                {material[sticker.material]}\r\n            </div>\r\n            <div>{sticker.line1}</div>\r\n            <div>{sticker.line2}</div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  logoWrapper: {\r\n    position: \"absolute\",\r\n    left: \"20%\",\r\n    bottom: \"0px\",\r\n  },\r\n}));\r\n\r\nexport const LogoArea = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.logoWrapper}>\r\n      <img src=\"/logo.png\" alt=\"logo\" />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { HighlightOff, Edit } from \"@material-ui/icons\";\r\nimport { Stickers } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonsWarper: {\r\n        position: \"absolute\",\r\n        bottom: \"-19px\",\r\n        width: \"90px\",\r\n        left: \"45px\",\r\n        height: \"20px\",\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    sticker: Stickers;\r\n    itemKey: number;\r\n    stickersList: Stickers[];\r\n    setStickersList: (stickersList: Stickers[]) => void;\r\n    setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nexport const ButtonsArea = ({ sticker, stickersList, setStickersList, setFormState, itemKey }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const removeSticker = () => {\r\n        const newList = stickersList.filter((item, index) => index !== itemKey);\r\n        setStickersList(newList);\r\n    }\r\n\r\n    const editSticker = () => {\r\n        setFormState(sticker);\r\n        removeSticker();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.buttonsWarper}>\r\n            <HighlightOff onClick={removeSticker} className=\"float-left pointer\" />\r\n            <Edit onClick={editSticker} className=\"float-right pointer\" />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../../interfaces\";\r\nimport { Header } from \"./Header\";\r\nimport { ProductImage } from \"./ProductImage\";\r\nimport { ContentArea } from \"./ContentArea\";\r\nimport { LogoArea } from \"./LogoArea\";\r\nimport { ButtonsArea } from \"./ButtonsArea\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"7cm\",\r\n    width: \"4.58cm\",\r\n    float: \"left\",\r\n    \"max-width\": \"4.58cm\",\r\n    \"max-height\": \"7cm\",\r\n    \"font-size\": \"13px\",\r\n    \"text-transform\": \"uppercase\",\r\n\r\n    // border: \"1px solid\",\r\n  },\r\n  wrapper: {\r\n    padding: \"5px\",\r\n    position: \"relative\",\r\n  },\r\n  textWrapper: {\r\n    height: \"90px\",\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    \"justify-content\": \"space-around\",\r\n  },\r\n}));\r\n\r\n\r\ninterface Props {\r\n  sticker: Stickers;\r\n  formViewStatus: boolean;\r\n  itemKey: number;\r\n  stickersList: Stickers[];\r\n  setStickersList: (stickersList: Stickers[]) => void;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\n\r\nexport const PrintCube = ({ sticker, itemKey, stickersList, setStickersList, setFormState, formViewStatus }: Props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.textWrapper}>\r\n          <Header date={sticker.date} quantity={sticker.quantity} orderID={sticker.orderID} />\r\n          <ContentArea sticker={sticker} />\r\n        </div>\r\n\r\n        <ProductImage imageURL={sticker.image} />\r\n        <LogoArea />\r\n        {(formViewStatus ?\r\n          <ButtonsArea\r\n            sticker={sticker}\r\n            itemKey={itemKey}\r\n            setFormState={setFormState}\r\n            stickersList={stickersList}\r\n            setStickersList={setStickersList} />\r\n          : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PrintCube } from \"./PrintCube/PrintCube\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stickers } from \"../interfaces\";\r\n\r\n\r\n\r\nexport interface StickersAreaProps {\r\n  stickersList: Stickers[];\r\n  formViewStatus: boolean;\r\n  setStickersList: (stickersList: Stickers[]) => void;\r\n  setFormState: React.Dispatch<React.SetStateAction<Stickers>>;\r\n}\r\n\r\nexport const StickersArea: React.FC<StickersAreaProps> = ({ stickersList, formViewStatus, setStickersList, setFormState }: StickersAreaProps) => {\r\n  const elementWidth = formViewStatus ? \"1305px\" : \"1060px\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: \"0 0 0 38px\",\r\n      padding: \"0px\",\r\n      width: elementWidth,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const listItems = stickersList.map((sticker, i) => (\r\n    <PrintCube\r\n      stickersList={stickersList}\r\n      setStickersList={setStickersList}\r\n      setFormState={setFormState}\r\n      itemKey={i}\r\n      key={i}\r\n      sticker={sticker}\r\n      formViewStatus={formViewStatus} />\r\n  )).reverse();\r\n\r\n  return <div className={classes.root}>{listItems}</div>;\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  setFormViewStatus: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nfunction ShowButton({ setFormViewStatus }:Props) {\r\n  const classes = useStyles();\r\n\r\n  const showForm = () => {\r\n    setFormViewStatus(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <VisibilityIcon className=\"pointer\" onClick={showForm} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowButton;\r\n","import React, { useState } from \"react\";\nimport { FormArea } from \"./components/FormArea/FormArea\";\nimport { StickersArea } from \"./components/StickersArea\";\nimport ShowButton from \"./components/ShowButton\";\nimport { Stickers } from \"./interfaces\";\n\nconst getTodayDate = () => {\n  const today = new Date();\n  today.setDate(new Date().getDate() + 1);\n\n  const dd = String(today.getDate()).padStart(2, \"0\");\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  const yyyy = today.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n}\n\n\nconst App = () => {\n  const [stickersList, setStickersList] = useState<Stickers[]>([]);\n  const [formViewStatus, setFormViewStatus] = useState<boolean>(true);\n  const todayDate = getTodayDate();\n\n  const [formState, setFormState] = useState<Stickers>({\n    orderID: \"11\",\n    date: todayDate,\n    quantity: \"\",\n    material: \"silver\",\n    chainLength: \"\",\n    line1: \"line1\",\n    line2: \"line2\",\n    image:\n      \"https://instagram.ftlv6-1.fna.fbcdn.net/v/t51.2885-15/e15/s320x320/98331657_291805631844341_3782185453709637350_n.jpg?_nc_ht=instagram.ftlv6-1.fna.fbcdn.net&_nc_cat=105&_nc_ohc=S3XzhPEIHGgAX_z8V84&oh=666e229c5f174508a405cb4895b9043b&oe=5F0A1887\",\n    gift: false,\n    fast: false,\n  });\n\n  //USE MOBX !!!\n  //USE CSS file\n\n  // const setStickers = (stickersList: Stickers[]) => {\n  //   setStickersList(stickersList);\n  // }\n\n  return (\n    <div>\n      {formViewStatus ? (\n        <FormArea\n          setStickersList={setStickersList}\n          stickersList={stickersList}\n          formState={formState}\n          setFormState={setFormState}\n          setFormViewStatus={setFormViewStatus}\n          todayDate={todayDate}\n        />\n      ) : (\n          <ShowButton setFormViewStatus={setFormViewStatus} />\n        )}\n\n      <StickersArea\n        formViewStatus={formViewStatus}\n        setStickersList={setStickersList}\n        stickersList={stickersList}\n        setFormState={setFormState}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}